#!/usr/bin/env bash

mc_port=25566
port=${1:-${PORT:-8080}}

# Start the TCP tunnel
serveo_cmd="screen -L -Logfile serveo.log ssh -o "StrictHostKeyChecking=no" -R 0:localhost:${mc_port} serveo.net"
echo "Starting serveo..."
eval "$serveo_cmd | tee serveo2.log &"
ngrok_pid=$!

# Do an inline sync first, then start the background job
echo "Starting sync..."
bin/sync
eval "while true; do sleep ${SYNC_INTERVAL:-60}; bin/sync; done &"
sync_pid=$!

# create server config
echo "server-port=${mc_port}" >> /app/server.properties
for f in whitelist banned-players banned-ips ops; do
  test ! -f $f.json && echo -n "[]" > $f.json
done

limit=$(ulimit -u)
case $limit in
  512)   # 2X Dyno
  heap="768m"
  ;;
  32768) # PX Dyno
  heap="4g"
  ;;
  *)     # 1X Dyno
  heap="384m"
  ;;
esac

echo "Starting: minecraft ${mc_port}"
eval "screen -L -h 2048 -dmS minecraft java -Xmx${heap} -Xms${heap} -Djline.terminal=jline.UnsupportedTerminal -jar minecraft.jar nogui"
# Djline.terminal option is from https://bit.ly/2JdoBBi
main_pid=$!

# Flush the logfile every second, and ensure that the logfile exists
screen -X "logfile 1" && sleep 1

echo "Tailing log"
eval "tail -f screenlog.0 &"
tail_pid=$!

sigterm() {
  bin/sync
  kill $ngrok_pid $main_pid $sync_pid $tail_pid
}

sigkill() {
  bin/sync
  kill -9 $ngrok_pid $main_pid $sync_pid $tail_pid; exit
}

trap sigterm SIGTERM
trap sigkill SIGKILL

# Start website
node bin/index.js
